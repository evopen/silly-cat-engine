#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_scalar_block_layout : require
#extension GL_GOOGLE_include_directive : require

layout(binding = 0, set = 0, rgba32f) uniform image2D storage_image;
layout(binding = 1, set = 0) uniform accelerationStructureEXT tlas;

void main()
{
    const vec2 resolution = imageSize(storage_image);
    const ivec2 pixel = ivec2(gl_LaunchIDEXT.xy);

    if ((pixel.x >= resolution.x) || (pixel.y >= resolution.y)) {
        return;
    }

    // This scene uses a right-handed coordinate system like the OBJ file format, where the
    // +x axis points right, the +y axis points up, and the -z axis points into the screen.
    // The camera is located at (-0.001, 0, 53).
    const vec3 cameraOrigin = vec3(-0.001, 0.0, 53.0);
    // Define the field of view by the vertical slope of the topmost rays:
    const float fovVerticalSlope = 1.0 / 5.0;

    vec4 color = vec4(pixel.x / float(resolution.x), //
        pixel.y / float(resolution.y), //
        0.0, //
        0.0);
    imageStore(storage_image, pixel, color);
}